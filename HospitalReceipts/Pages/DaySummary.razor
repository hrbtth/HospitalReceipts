@page "/day-summary/{bookId:int}/{dateStr}"
@using System.Globalization
@using Microsoft.EntityFrameworkCore
@using HospitalReceipts.Data
@using HospitalReceipts.Models
@inject AppDbContext _context
@inject IJSRuntime JS

@code {
    [Parameter] public int bookId { get; set; }
    [Parameter] public string dateStr { get; set; } = "";

    private string bookName = "";
    private DateTime date = DateTime.Today;
    private List<Receipt> receipts = new();
    private double totalAmount = 0;
    private string reportHeaderTxt = "";
    private string pageFooterTxt = "";

    protected override void OnParametersSet()
    {
        if (!DateTime.TryParse(dateStr, CultureInfo.InvariantCulture, DateTimeStyles.None, out date))
        {
            date = DateTime.Today;
        }

        var book = _context.ReceiptBookMain
            .AsNoTracking()
            .FirstOrDefault(b => b.BookId == bookId);

        bookName = book != null ? book.BookName : $"Book {bookId}";

        receipts = _context.Receipts
            .AsNoTracking()
            .Where(r => r.BookId == bookId && r.Date.Date == date.Date)
            .OrderBy(r => r.ReceiptNo)
            .ToList();

        totalAmount = receipts.Sum(r => r.Amount);
        reportHeaderTxt = $"{bookName} - Day Summary for {date:dd MMM yyyy}";
        pageFooterTxt = $"{bookName} for {date:dd MMM yyyy}, Generated on {DateTime.Now:dd MMM yyyy HH:mm}";

    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("paginateContent", reportHeaderTxt, pageFooterTxt);
        }
    }


    private async Task PrintPage()
    {
        await JS.InvokeVoidAsync("eval", "setTimeout(() => window.print(), 300)");
        
    }
}

<!-- Toolbar (screen only) -->
<div class="no-print" style="margin-bottom:12px;">
    <button class="btn btn-primary" @onclick="PrintPage">Print</button>
</div>

<div id="sourceContent" style="display:none">

    <div class="columnHeader">
        <span>R No</span>
        <span>Name</span>
        <span>Amount</span>
    </div>

    @foreach (var r in receipts)
    {
        <div class="receiptRow">
            <span>@r.ReceiptNo</span>
            <span>@r.Name</span>
            <span>@r.Amount.ToString("#0.00")</span>
        </div>
    }

    <div class="receiptTotal">
        <span></span>
        <span><b>Total</b></span>
        <span><b>@totalAmount.ToString("C")</b></span>
    </div>
</div>
<!-- Printable Area -->
<div id="printableArea">
    <div id="pagesContainer">
        <!-- Pages will be dynamically added here -->
    </div>


</div>
<style>
    
    /* Screen view */
    .a4page {
        width: 210mm;
        height: 297mm;
        margin: 0 auto;
        padding: 10mm;
        box-sizing: border-box;
        border: 1px solid #ccc;
        background: white;
        box-shadow: 0 0 5px rgba(0,0,0,0.2);
        position: relative; /* Important: allow absolute children */
        page-break-after: always;
        /*font-size: 10;*/
    }

    .two-column-container {
        column-count: 2;
        column-gap: 10mm;
        column-fill: auto;
        height: calc(297mm - 20mm); /* page height minus header+footer */
        margin: 0;
        padding: 0;
    }

    .pageContent {
        flex: 1; /* takes available space between header and footer */
        text-align: justify;
        margin: 0;
        padding: 0;
    }

    .dummyContainer {
        background-color: aqua;
    }



    .pageNumber {
        position: absolute;
        top: 5mm;
        right: 10mm;
        font-size: 12px;
        color: black;
    }

    .pageHeader {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 10mm;
        border-bottom: 1px solid black; /* header bottom border box */
        margin-left: 10mm;
        margin-right: 10mm;
        /*background-color: lightblue;*/
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 16px;
    }



    .pageFooter {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        height: 10mm;
        margin-left: 10mm;
        margin-right: 10mm;
        border-top: 1px solid black; /* header bottom border box */
        /*background-color: lightblue;*/
        display: flex;
        align-items: top;
        justify-content: center;
        font-weight: normal;
        font-size: 10;
    }

    /*--------*/
    .columnHeader, .receiptTotal {
        display: flex;
        justify-content: space-between;
        border-bottom: 1px solid #ccc;
        padding: 4px;
    }

    .columnHeader {
        font-weight: bold;
        border-bottom: 2px solid black;
    }

    .receiptRow {
        display: grid;
        grid-template-columns: 50px 1fr 100px; /* ReceiptNo | Name | Amount */
        /*padding: 4px 8px;*/
        border-bottom: 1px dotted #ccc;
        
        break-inside: avoid; /* Prevent a row from splitting across columns */
        font-size :16px;
        line-height: 20px; /* lock line spacing */
        height: 22px; /* force exact height */
        overflow: hidden;
    }

        .receiptRow span:first-child {
            text-align: right;
            padding-right: 5px;
            border-left: 1px dotted #ccc;
        }

        .receiptRow span:nth-child(2) {
            text-align: left;
            padding-left: 5px;
            border-right: 1px dotted #ccc;
            border-left: 1px dotted #ccc;
            
        }

        .receiptRow span:last-child {
            text-align: right;
            padding-right: 10px;
            border-right: 1px dotted #ccc;
        }

    .receiptTotal {
        border-top: 3px solid black;
        font-weight: bold;
    }

    /*----------*/
    /* Print styles*/
    /* Remove shadows/borders when printing */
    @@page {
        size: A4;
        margin: 5mm; /*it should be equal to the padding in a4page style,  then in a4page style set padding to 0*/
    }
    @@media print {
        
        body * {
            visibility: hidden; /* hide everything */
        }

        #printableArea, #printableArea * {
            visibility: visible; /* only show printable area */
        }

        #printableArea {
            position: absolute;
            left: 0;
            top: 0;
        }

        /* .a4page {
            box-shadow: none;
            border: none;
            margin: 0;
            width: 210mm;
            height: 297mm;
            page-break-after: always;
        } */

        .a4page {
            width: 210mm;
            height: 297mm;
            margin: 0 auto;
            padding: 10mm; 
            box-sizing: border-box;
            border: 1px solid #ccc;
            background: white;
            box-shadow:none;
            position: relative; /* Important: allow absolute children */
            page-break-after: always;
            /*font-size: 10px;*/
        }
        
}
    }

</style>
